<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!--参考：https://docs.spring.io/spring/docs/current/spring-framework-reference/data-access.html#transaction-strategies -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/spring" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- aop配置：参考1.4.2. Example of Declarative Transaction Implementation -->
	<!-- https://docs.spring.io/spring/docs/current/spring-framework-reference/data-access.html#transaction-declarative-first-example -->
	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true"/>
			<!-- other methods use the default transaction settings (see below) -->
			<!--默认为REQUIRED-->
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRES_NEW"/>
		</tx:attributes>
	</tx:advice>

	<!-- ensure that the above transactional advice runs for any execution
        of an operation defined by the FooService interface -->
	<aop:config>
		<aop:pointcut id="txDataServiceOperation" expression="execution(* com.github.zeng233.spring.dataaccess.tx.data.ITxDataService.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txDataServiceOperation"/>
	</aop:config>




	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="txDataDao" class="com.github.zeng233.spring.dataaccess.tx.data.TxDataDao">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>

	<bean id="txDataService" class="com.github.zeng233.spring.dataaccess.tx.data.TxDataServiceImpl">
		<property name="txDataDao" ref="txDataDao"/>
	</bean>
</beans>